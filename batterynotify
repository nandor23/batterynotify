#!/bin/sh

# Send a notification if the laptop battery is either low 
# or is fully charged.

export DISPLAY=:0
export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus"

# Battery percentage at which to notify
WARNING_LEVEL_LOW=30
WARNING_LEVEL_FULL=80

# Icon names that are shown with the notification
BATTERY_LOW_ICON="battery-level-30"
BATTERY_FULL_ICON="battery-level-80"

BATTERY_DISCHARGING=$(acpi -b | grep "Battery 0" | grep -c "Discharging")
BATTERY_LEVEL=$(acpi -b | grep "Battery 0" | grep -P -o '[0-9]+(?=%)')

# Use two files to store whether we've shown a notification or not (to prevent multiple notifications)
EMPTY_FILE=/tmp/batterynotify_empty
FULL_FILE=/tmp/batterynotify_full

VALUES_FILE=~/.batterynotify_values

# Create the file for the values that the script uses with the default values
if [ ! -f "$VALUES_FILE" ]; then
    touch $VALUES_FILE
    echo "$WARNING_LEVEL_LOW" > "$VALUES_FILE"
    echo "$WARNING_LEVEL_FULL" >> "$VALUES_FILE"
fi

# Check if enough arguments were given
if [ $# -gt 0 ] && (( $# % 2 != 0 )); then
    echo "Arguments should be in format: <flag> <value>"
    exit 1
fi

modified_values=0
# Modify the values in the VALUES_FILE
while [ $# -gt 0 ]; do
    flag="$1"
    value="$2"

    if [ "$flag" != "-l" ] && [ "$flag" != "-f" ]; then
        echo "Invalid flag: ${flag}"
        exit 1
    fi

    if echo "$value" | grep -vqE '^([5-9]|[1-9][0-9]|100)$'; then
        echo "Battery values must be between 5 and 100"
        exit 1
    fi

    if [ "$flag" = "-l" ]; then
        sed -i "1s/.*/$value/" "$VALUES_FILE"
        modified_values=1
    elif [ "$flag" = "-f" ]; then
        sed -i "2s/.*/$value/" "$VALUES_FILE"
        modified_values=1
    fi

    shift 2
done

# If values were modified then exit, as the main script 
if [ "$modified_values" -eq 1 ]; then
    exit 0
fi

{
    read -r WARNING_LEVEL_LOW
    read -r WARNING_LEVEL_FULL
} < "$VALUES_FILE"

# Reset notifications if the computer is charging/discharging
if [ "$BATTERY_DISCHARGING" -eq 1 ] && [ -f $FULL_FILE ]; then
    rm $FULL_FILE
elif [ "$BATTERY_DISCHARGING" -eq 0 ] && [ -f $EMPTY_FILE ]; then
    rm $EMPTY_FILE
fi

# If the battery is charging and is full (and has not shown notification yet)
if [ "$BATTERY_LEVEL" -ge $WARNING_LEVEL_FULL ] && [ "$BATTERY_DISCHARGING" -eq 0 ] && [ ! -f $FULL_FILE ]; then
    notify-send "Battery Charged" "Battery charged to ${BATTERY_LEVEL}%." -i $BATTERY_FULL_ICON -r 9991
    touch $FULL_FILE
# If the battery is low and is not charging (and has not shown notification yet)
elif [ "$BATTERY_LEVEL" -le $WARNING_LEVEL_LOW ] && [ "$BATTERY_DISCHARGING" -eq 1 ] && [ ! -f $EMPTY_FILE ]; then
    notify-send "Low Battery" "${BATTERY_LEVEL}% of battery remaining." -u critical -i $BATTERY_LOW_ICON -r 9991
    touch $EMPTY_FILE
fi
